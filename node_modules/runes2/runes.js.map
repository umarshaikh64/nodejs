{"version":3,"file":"runes.js","sourceRoot":"","sources":["runes.ts"],"names":[],"mappings":"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","sourcesContent":["'use strict'\n\nexport const HIGH_SURROGATE_START = 0xd800\nexport const HIGH_SURROGATE_END = 0xdbff\n\nexport const LOW_SURROGATE_START = 0xdc00\n\nexport const REGIONAL_INDICATOR_START = 0x1f1e6\nexport const REGIONAL_INDICATOR_END = 0x1f1ff\n\nexport const FITZPATRICK_MODIFIER_START = 0x1f3fb\nexport const FITZPATRICK_MODIFIER_END = 0x1f3ff\n\nexport const VARIATION_MODIFIER_START = 0xfe00\nexport const VARIATION_MODIFIER_END = 0xfe0f\n\nexport const DIACRITICAL_MARKS_START = 0x20d0\nexport const DIACRITICAL_MARKS_END = 0x20ff\n\nexport const ZWJ = 0x200d\n\nexport const GRAPHEMS = [\n\t0x0308, // ( ◌̈ ) COMBINING DIAERESIS\n\t0x0937, // ( ष ) DEVANAGARI LETTER SSA\n\t0x0937, // ( ष ) DEVANAGARI LETTER SSA\n\t0x093F, // ( ि ) DEVANAGARI VOWEL SIGN I\n\t0x093F, // ( ि ) DEVANAGARI VOWEL SIGN I\n\t0x0BA8, // ( ந ) TAMIL LETTER NA\n\t0x0BBF, // ( ி ) TAMIL VOWEL SIGN I\n\t0x0BCD, // ( ◌்) TAMIL SIGN VIRAMA\n\t0x0E31, // ( ◌ั ) THAI CHARACTER MAI HAN-AKAT\n\t0x0E33, // ( ำ ) THAI CHARACTER SARA AM\n\t0x0E40, // ( เ ) THAI CHARACTER SARA E\n\t0x0E49, // ( เ ) THAI CHARACTER MAI THO\n\t0x1100, // ( ᄀ ) HANGUL CHOSEONG KIYEOK\n\t0x1161, // ( ᅡ ) HANGUL JUNGSEONG A\n\t0x11A8, // ( ᆨ ) HANGUL JONGSEONG KIYEOK\n]\n\nexport function runes(string: string): string[]\n{\n\tif (typeof string !== 'string')\n\t{\n\t\tthrow new Error('string cannot be undefined or null')\n\t}\n\tconst result = []\n\tlet i = 0\n\tlet increment = 0\n\twhile (i < string.length)\n\t{\n\t\tincrement += nextUnits(i + increment, string)\n\t\tif (isGraphem(string[i + increment]))\n\t\t{\n\t\t\tincrement++\n\t\t}\n\t\tif (isVariationSelector(string[i + increment]))\n\t\t{\n\t\t\tincrement++\n\t\t}\n\t\tif (isDiacriticalMark(string[i + increment]))\n\t\t{\n\t\t\tincrement++\n\t\t}\n\t\tif (isZeroWidthJoiner(string[i + increment]))\n\t\t{\n\t\t\tincrement++\n\t\t\tcontinue\n\t\t}\n\t\tresult.push(string.substring(i, i + increment))\n\t\ti += increment\n\t\tincrement = 0\n\t}\n\treturn result\n}\n\n// Decide how many code units make up the current character.\n// BMP characters: 1 code unit\n// Non-BMP characters (represented by surrogate pairs): 2 code units\n// Emoji with skin-tone modifiers: 4 code units (2 code points)\n// Country flags: 4 code units (2 code points)\n// Variations: 2 code units\nexport function nextUnits(i: number, string: string): 1 | 2 | 4\n{\n\tconst current = string[i]\n\t// If we don't have a value that is part of a surrogate pair, or we're at\n\t// the end, only take the value at i\n\tif (!isFirstOfSurrogatePair(current) || i === string.length - 1)\n\t{\n\t\treturn 1\n\t}\n\n\tconst currentPair = current + string[i + 1]\n\tlet nextPair = string.substring(i + 2, i + 5)\n\n\t// Country flags are comprised of two regional indicator symbols,\n\t// each represented by a surrogate pair.\n\t// See http://emojipedia.org/flags/\n\t// If both pairs are regional indicator symbols, take 4\n\tif (isRegionalIndicator(currentPair) && isRegionalIndicator(nextPair))\n\t{\n\t\treturn 4\n\t}\n\n\t// If the next pair make a Fitzpatrick skin tone\n\t// modifier, take 4\n\t// See http://emojipedia.org/modifiers/\n\t// Technically, only some code points are meant to be\n\t// combined with the skin tone modifiers. This function\n\t// does not check the current pair to see if it is\n\t// one of them.\n\tif (isFitzpatrickModifier(nextPair))\n\t{\n\t\treturn 4\n\t}\n\treturn 2\n}\n\nexport function isFirstOfSurrogatePair(string: string)\n{\n\treturn string && betweenInclusive(string[0].charCodeAt(0), HIGH_SURROGATE_START, HIGH_SURROGATE_END)\n}\n\nexport function isRegionalIndicator(string: string)\n{\n\treturn betweenInclusive(codePointFromSurrogatePair(string), REGIONAL_INDICATOR_START, REGIONAL_INDICATOR_END)\n}\n\nexport function isFitzpatrickModifier(string: string)\n{\n\treturn betweenInclusive(codePointFromSurrogatePair(string), FITZPATRICK_MODIFIER_START, FITZPATRICK_MODIFIER_END)\n}\n\nexport function isVariationSelector(string: string)\n{\n\treturn typeof string === 'string' && betweenInclusive(string.charCodeAt(0), VARIATION_MODIFIER_START, VARIATION_MODIFIER_END)\n}\n\nexport function isDiacriticalMark(string: string)\n{\n\treturn typeof string === 'string' && betweenInclusive(string.charCodeAt(0), DIACRITICAL_MARKS_START, DIACRITICAL_MARKS_END)\n}\n\nexport function isGraphem(string: string)\n{\n\treturn typeof string === 'string' && GRAPHEMS.indexOf(string.charCodeAt(0)) !== -1\n}\n\nexport function isZeroWidthJoiner(string: string)\n{\n\treturn typeof string === 'string' && string.charCodeAt(0) === ZWJ\n}\n\nexport function codePointFromSurrogatePair(pair: string)\n{\n\tconst highOffset = pair.charCodeAt(0) - HIGH_SURROGATE_START\n\tconst lowOffset = pair.charCodeAt(1) - LOW_SURROGATE_START\n\treturn (highOffset << 10) + lowOffset + 0x10000\n}\n\nexport function betweenInclusive(value: number, lower: number, upper: number)\n{\n\treturn value >= lower && value <= upper\n}\n\nexport function substring(string: string, start?: number, width?: number)\n{\n\tconst chars = runes(string)\n\tif (start === undefined)\n\t{\n\t\treturn string\n\t}\n\tif (start >= chars.length)\n\t{\n\t\treturn ''\n\t}\n\tconst rest = chars.length - start\n\tconst stringWidth = width === undefined ? rest : width\n\tlet endIndex = start + stringWidth\n\tif (endIndex > (start + rest))\n\t{\n\t\tendIndex = undefined\n\t}\n\treturn chars.slice(start, endIndex).join('')\n}\n\nexport { substring as substr }\n\nrunes.substr = substring;\nrunes.substring = substring;\n\nrunes.default = runes;\nrunes.runes = runes;\n\nObject.defineProperty(runes, \"__esModule\", { value: true });\n\nexport default runes\n\n"]}