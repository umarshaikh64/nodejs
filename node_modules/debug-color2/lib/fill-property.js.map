{"version":3,"file":"fill-property.js","sourceRoot":"","sources":["fill-property.ts"],"names":[],"mappings":";;;AAMA,SAAS,IAAI,KAAI,CAAC;AAEL,QAAA,cAAc,GAAG;IAE7B,OAAO;IAEP,MAAM;IACN,KAAK;CAEI,CAAC;AAEE,QAAA,cAAc,GAAG;IAE7B,OAAO;IAEP,KAAK;IACL,QAAQ;CAEC,CAAC;AAEE,QAAA,aAAa,GAAG;IAE5B,OAAO;IAEP,OAAO;IACP,gBAAgB;IAChB,UAAU;IAEV,MAAM;IACN,SAAS;IAET,OAAO;CAEE,CAAC;AAEE,QAAA,iBAAiB,GAAG;IAChC,SAAS;IACT,YAAY;IACZ,WAAW;IACX,cAAc;IAEd,UAAU;IACV,aAAa;CACJ,CAAC;AAEE,QAAA,cAAc,GAAG;IAC7B,QAAQ;IACR,OAAO;IACP,OAAO;IACP,MAAM;IAEN,WAAW;CACF,CAAC;AAIE,QAAA,OAAO,GAAG,EAAE,CAAC,MAAM,CAC/B,sBAAc,EACd,sBAAc,EACd,yBAAiB,EACjB,qBAAa,EACb,sBAAc,CAOV,CACJ;AAED,SAAgB,YAAY,CAAc,SAAkB,OAAO,EAAE,EAAE,GAAG,eAAO,EAAE,EAAE,GAAG,IAAI;IAE3F,EAAE,CAAC,OAAO,CAAC,UAAU,MAAM;QAE1B,IAAI,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,EACvB;YACC,MAAM,CAAC,MAAgB,CAAC,GAAG,EAAE,CAAC;SAC9B;IACF,CAAC,CAAC,CAAC;IAEH,OAAO,MAAM,CAAA;AACd,CAAC;AAXD,oCAWC;AAED,kBAAe,YAAY,CAAC","sourcesContent":["/**\n * Created by user on 2018/6/29/029.\n */\nimport Console from 'console';\n\nfunction noop(...argv): void\nfunction noop() {}\n\nexport const methods_stdout = [\n\n\t\"debug\",\n\n\t\"info\",\n\t\"log\",\n\n] as const;\n\nexport const methods_output = [\n\n\t\"table\",\n\n\t\"dir\",\n\t\"dirxml\",\n\n] as const;\n\nexport const methods_other = [\n\n\t\"clear\",\n\n\t\"group\",\n\t\"groupCollapsed\",\n\t\"groupEnd\",\n\n\t\"time\",\n\t\"timeEnd\",\n\n\t\"count\",\n\n] as const;\n\nexport const methods_inspector = [\n\t\"profile\",\n\t\"profileEnd\",\n\t\"timeStamp\",\n\t\"markTimeline\",\n\n\t\"timeline\",\n\t\"timelineEnd\",\n] as const;\n\nexport const methods_stderr = [\n\t\"assert\",\n\t\"error\",\n\t\"trace\",\n\t\"warn\",\n\n\t\"exception\",\n] as const;\n\ntype ValueOf<T> = Exclude<T[keyof T], number | Function>;\n\nexport const methods = [].concat(\n\tmethods_stdout,\n\tmethods_stderr,\n\tmethods_inspector,\n\tmethods_other,\n\tmethods_output,\n\t) as (\n\tValueOf<typeof methods_stdout>\n\t| ValueOf<typeof methods_stderr>\n\t| ValueOf<typeof methods_inspector>\n\t| ValueOf<typeof methods_other>\n\t| ValueOf<typeof methods_output>\n\t\t)[]\n;\n\nexport function fillProperty<T = Console>(target: Console = console, ls = methods, fn = noop)\n{\n\tls.forEach(function (method)\n\t{\n\t\tif (!(method in target))\n\t\t{\n\t\t\ttarget[method as string] = fn;\n\t\t}\n\t});\n\n\treturn target\n}\n\nexport default fillProperty;\n"]}