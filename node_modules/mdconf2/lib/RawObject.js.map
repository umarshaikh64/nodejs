{"version":3,"file":"RawObject.js","sourceRoot":"","sources":["RawObject.ts"],"names":[],"mappings":";AAAA;;GAEG;;;AAEH,+BAA+B;AAGlB,QAAA,eAAe,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACzC,QAAA,gBAAgB,GAAG,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAwBxD,MAAa,SAAS;IAKrB,YAAY,MAAU,EAAE,GAAQ;QAE/B,IAAI,GAAG,EACP;YACC,IAAI,CAAC,uBAAe,CAAC,GAAG,GAAG,CAAC;SAC5B;QAED,IAAI,CAAC,wBAAgB,CAAC,GAAG,MAAM,CAAC;IACjC,CAAC;IAED,OAAO;QAEN,aAAa;QACb,IAAI,GAAG,GAAG,IAAI,CAAC,uBAAe,CAAC,IAAI,IAAI,CAAC,uBAAe,CAAC,CAAC,IAAI,CAAC;QAE9D,OAAO,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAU,CAAC;YAE5D,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;QACxB,CAAC,CAAC,GAAG,IAAI,cAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAA;IAChE,CAAC;IAED,MAAM;QAEL,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;IACxB,CAAC;IAED,QAAQ;QAEP,OAAO,IAAI,CAAC,wBAAgB,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC1C,CAAC;IAED,SAAS;QAER,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,wBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,wBAAgB,CAAC,CAAC;IACxF,CAAC;IAED,UAAU;QAET,OAAO,IAAI,CAAC,uBAAe,CAAC,CAAC;IAC9B,CAAC;IAED,WAAW;QAEV,OAAO,IAAI,CAAC,wBAAgB,CAAC,CAAC;IAC/B,CAAC;IAID,MAAM,CAAC,WAAW,CAA+C,CAAM;QAEtE,OAAO,CAAC,CAAC,YAAY,SAAS,CAAC,CAAC;IACjC,CAAC;IASD,MAAM,CAAC,aAAa,CAAC,IAAI;QAExB,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAC1B;YACC,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;SAC1B;QAED,IAAI,OAAO,IAAI,IAAI,QAAQ,EAC3B;YACC,KAAK,IAAI,CAAC,IAAI,IAAI,EAClB;gBACC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aACtC;SACD;QAED,OAAO,IAAI,CAAC;IACb,CAAC;CAED;AAnFD,8BAmFC;AAED,kBAAe,SAAS,CAAC","sourcesContent":["/**\n * Created by user on 2020/1/15.\n */\n\nimport { inspect } from \"util\";\nimport { Token, Tokens } from 'marked';\n\nexport const SYMBOL_RAW_DATA = Symbol.for('raw_data');\nexport const SYMBOL_RAW_VALUE = Symbol.for('raw_value');\n\nexport type IRawObjectData = Token | IRawObjectBlockquote | IRawObjectDataPlus;\nexport type IRawObjectDataPlus = IRawObjectTokenPlus<Tokens.HTML> | IRawObjectTokenPlus<Tokens.Code>;\n\nexport type IRawObjectPlus = RawObject<string, IRawObjectDataPlus>;\n\nexport type IRawObjectTokenPlus<T extends Tokens.HTML | Tokens.Code> = T & {\n\tparagraph: string[]\n}\n\nexport interface ITokenText2 extends Omit<Tokens.Text, 'type'>\n{\n\ttype: 'text2';\n}\n\nexport interface IRawObjectBlockquote\n{\n\ttype: 'blockquote',\n\ttext: string[],\n\n\tparagraph: string[],\n}\n\nexport class RawObject<RV extends unknown, RD extends IRawObjectData>\n{\n\t[SYMBOL_RAW_DATA]: RD;\n\t[SYMBOL_RAW_VALUE]: RV;\n\n\tconstructor(source: RV, raw?: RD)\n\t{\n\t\tif (raw)\n\t\t{\n\t\t\tthis[SYMBOL_RAW_DATA] = raw;\n\t\t}\n\n\t\tthis[SYMBOL_RAW_VALUE] = source;\n\t}\n\n\tinspect()\n\t{\n\t\t// @ts-ignore\n\t\tlet pad = this[SYMBOL_RAW_DATA] && this[SYMBOL_RAW_DATA].type;\n\n\t\treturn 'Raw' + this.getTypeof().replace(/^[a-z]/, function (s)\n\t\t{\n\t\t\treturn s.toUpperCase();\n\t\t}) + `(${inspect(this.getRawValue())}${pad ? ', ' + pad : ''})`\n\t}\n\n\ttoJSON()\n\t{\n\t\treturn this.toString();\n\t}\n\n\ttoString()\n\t{\n\t\treturn this[SYMBOL_RAW_VALUE].toString();\n\t}\n\n\tgetTypeof()\n\t{\n\t\treturn Array.isArray(this[SYMBOL_RAW_VALUE]) ? 'array' : typeof this[SYMBOL_RAW_VALUE];\n\t}\n\n\tgetRawData(): RD\n\t{\n\t\treturn this[SYMBOL_RAW_DATA];\n\t}\n\n\tgetRawValue(): RV\n\t{\n\t\treturn this[SYMBOL_RAW_VALUE];\n\t}\n\n\tstatic isRawObject<T extends RawObject<any, any>>(v: any | T): v is Extract<T, RawObject<any, any>>\n\tstatic isRawObject<T extends RawObject<unknown, IRawObjectData>>(v: any): v is T\n\tstatic isRawObject<T extends RawObject<unknown, IRawObjectData>>(v: any): v is T\n\t{\n\t\treturn (v instanceof RawObject);\n\t}\n\n\t/**\n\t * will remove hidden data and get source data\n\t *\n\t * @param {RawObject} data\n\t */\n\tstatic removeRawData<T>(data: RawObject<T, any>): T\n\tstatic removeRawData<T>(data: T): T\n\tstatic removeRawData(data)\n\t{\n\t\tif (this.isRawObject(data))\n\t\t{\n\t\t\tdata = data.getRawValue();\n\t\t}\n\n\t\tif (typeof data == 'object')\n\t\t{\n\t\t\tfor (let i in data)\n\t\t\t{\n\t\t\t\tdata[i] = this.removeRawData(data[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n}\n\nexport default RawObject;\n"]}