{"version":3,"file":"core.js","sourceRoot":"","sources":["core.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Module dependencies.\n */\nimport { Token, Tokens, MarkedOptions, Lexer } from 'marked';\nimport * as md from 'marked';\nimport { crlf, LF, CRLF, CR, chkcrlf } from 'crlf-normalize';\nimport { isMoment } from 'moment';\nimport isPlainObject from 'is-plain-object';\nimport { RawObject, IRawObjectTokenPlus, ITokenText2, IRawObjectPlus, IRawObjectDataPlus } from './lib/RawObject';\nimport { createInlineLexer, makeCodeBlock, normalize, put, getobjectbyid } from './lib/core';\n\nexport interface IOptionsParse\n{\n\t/**\n\t * @deprecated\n\t */\n\tcrlf?: typeof LF | typeof CRLF | typeof CR,\n\n\toldParseApi?: boolean,\n\n\tallowBlockquote?: boolean,\n\n\tdisableKeyToLowerCase?: boolean,\n\n\tmarkedOptions?: MarkedOptions,\n\n\tfilterObjectKey?,\n}\n\nexport const defaultOptionsParse: IOptionsParse = {\n\tcrlf: LF,\n\tallowBlockquote: true,\n\n\tmarkedOptions: Object.assign({},\n\t\tmd.defaults,\n\t\t{\n\t\t\tbreaks: true,\n\t\t},\n\t),\n};\n\nexport interface IObjectParse\n{\n\t[key: string]: any\n}\n\n/**\n * Parse the given `str` of markdown.\n *\n * @param {String | Buffer} str\n * @param {Object} options\n * @return {Object}\n * @api public\n */\nexport function parse(str: string, options?: IOptionsParse): IObjectParse\nexport function parse(str: Buffer, options?: IOptionsParse): IObjectParse\nexport function parse(str: string | Buffer, options: IOptionsParse = {}): IObjectParse\n{\n\t{\n\t\tlet markedOptions = Object.assign({}, defaultOptionsParse.markedOptions, options.markedOptions);\n\n\t\toptions = Object.assign({}, defaultOptionsParse, options, {\n\t\t\tmarkedOptions,\n\t\t});\n\t}\n\n\tlet source: string = str.toString();\n\tlet eol: typeof LF | typeof CRLF | typeof CR;\n\n\tif (1)\n\t{\n\t\t// disable crlf options\n\t\teol = LF;\n\t\tsource = crlf(source, eol);\n\t}\n\t/*\n\telse if (options.crlf)\n\t{\n\t\teol = options.crlf;\n\t\tsource = crlf(source, eol);\n\t}\n\telse\n\t{\n\t\tlet ck = chkcrlf(source);\n\t\teol = ck.lf ? LF : (ck.crlf ? CRLF : CR);\n\t}\n\t */\n\n\tlet lexer = new Lexer(options.markedOptions);\n\n\tlet toks = lexer.lex(source);\n\tlet conf = {};\n\tlet keys: string[] = [];\n\tlet depth = 0;\n\tlet inlist = false;\n\n\tlet paragraph: string[] = [];\n\tlet paragraph2: string[] = [];\n\tlet last_tok: Token;\n\tlet blockquote_start: boolean;\n\n\tlet inline_lexer = createInlineLexer(toks, Object.assign({}, options, {\n\n\t}));\n\n\t/*\n\tlet _inline_md = new MarkdownIt({\n\t\tlinkify: false,\n\t});\n\t*/\n\n\t(toks as Token[]).forEach(function (tok, index)\n\t{\n\t\tlet val: string = (tok as Tokens.Code).text ;\n\t\tlet _skip: boolean;\n\t\tlet type: (Token | ITokenText2)[\"type\"] = tok.type;\n\n\t\tif (type == 'text' && val.match(/[a-z]+\\:\\/\\//i))\n\t\t{\n\t\t\tlet r = inline_lexer.output(val);\n\t\t\t//let r = _inline_md.renderInline(val);\n\n\t\t\tif (val !== r && /^\\s*<a href=/.test(r))\n\t\t\t{\n\t\t\t\ttype = 'text2';\n\t\t\t}\n\t\t}\n\n\t\tswitch (tok.type)\n\t\t{\n\t\t\tcase 'heading':\n\t\t\t\twhile (depth-- >= tok.depth) keys.pop();\n\t\t\t\tkeys.push(normalize(tok.text, options));\n\t\t\t\tdepth = tok.depth;\n\n\t\t\t\tparagraph = [];\n\n\t\t\t\tbreak;\n\t\t\tcase 'list_item_start':\n\t\t\t\tinlist = true;\n\t\t\t\tbreak;\n\t\t\tcase 'list_item_end':\n\t\t\t\tinlist = false;\n\t\t\t\tbreak;\n\t\t\t\t// @ts-ignore\n\t\t\tcase 'text2':\n\t\t\tcase 'text':\n\t\t\t\tput(conf, keys, tok.text, undefined, undefined, options, {\n\t\t\t\t\ttype,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'blockquote_start':\n\t\t\t\tblockquote_start = true;\n\n\t\t\t\tif (options.allowBlockquote)\n\t\t\t\t{\n\t\t\t\t\tparagraph2 = paragraph;\n\t\t\t\t\tparagraph = [];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_skip = true;\n\t\t\t\t}\n\n\t\t\t\t//console.log(tok);\n\t\t\t\tbreak;\n\t\t\tcase 'blockquote_end':\n\n\t\t\t\tif (options.allowBlockquote && blockquote_start && paragraph.length)\n\t\t\t\t{\n\t\t\t\t\tval = paragraph.join(eol);\n\t\t\t\t\tval = val.replace(/\\s+$/g, '');\n\n\t\t\t\t\tif (!options.oldParseApi)\n\t\t\t\t\t{\n\t\t\t\t\t\tval = new RawObject(val, {\n\t\t\t\t\t\t\ttype: 'blockquote',\n\t\t\t\t\t\t\ttext: paragraph,\n\n\t\t\t\t\t\t\tparagraph: paragraph2,\n\t\t\t\t\t\t}) as any;\n\t\t\t\t\t}\n\n\t\t\t\t\tput(conf, keys, val, true, undefined, options);\n\n\t\t\t\t\tparagraph = [];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_skip = true;\n\t\t\t\t}\n\n\t\t\t\tblockquote_start = false;\n\t\t\t\tbreak;\n\t\t\tcase 'paragraph':\n\t\t\t\tparagraph.push(tok.text);\n\t\t\t\t//console.log(tok);\n\t\t\t\tbreak;\n\t\t\tcase 'code':\n\t\t\t\tval = val.replace(/\\s+$/g, '');\n\n\t\t\t\tif (!options.oldParseApi)\n\t\t\t\t{\n\t\t\t\t\tval = new RawObject(val, tok) as any;\n\t\t\t\t\t(val as any as IRawObjectPlus).getRawData().paragraph = paragraph;\n\t\t\t\t}\n\n\t\t\t\tput(conf, keys, val, true, undefined, options);\n\t\t\t\tbreak;\n\t\t\tcase 'table':\n\t\t\t\tput(conf, keys, null, null, { headers: tok.header, rows: tok.cells }, options);\n\t\t\t\tbreak;\n\t\t\tcase 'html':\n\t\t\t\tval = val.replace(/\\s+$/g, '');\n\n\t\t\t\tif (!options.oldParseApi)\n\t\t\t\t{\n\t\t\t\t\tval = new RawObject(val, tok) as any;\n\t\t\t\t\t(val as any as IRawObjectPlus).getRawData().paragraph = paragraph;\n\t\t\t\t}\n\n\t\t\t\tput(conf, keys, val, true, undefined, options);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t//console.log(tok);\n\n\t\t\t\t_skip = true;\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!_skip && !['paragraph'].includes(tok.type))\n\t\t{\n\t\t\tparagraph = [];\n\t\t}\n\n\t\tlast_tok = tok;\n\t});\n\n\t{\n\t\tlet parent;\n\t\tlet parent2 = conf;\n\t\tlet parent3;\n\n\t\tfor (let i in keys)\n\t\t{\n\t\t\tlet k = keys[i];\n\n\t\t\tif (/^\\d+$/.test(k))\n\t\t\t{\n\t\t\t\t// @ts-ignore\n\t\t\t\tlet kk = keys[i-1];\n\n\t\t\t\t// @ts-ignore\n\t\t\t\tlet parent = getobjectbyid(keys.slice(0, i-1), conf);\n\t\t\t\t// @ts-ignore\n\t\t\t\tlet obj = getobjectbyid(keys.slice(0, i), conf);\n\n\t\t\t\tlet ok = true;\n\n\t\t\t\tfor (let j in obj as object)\n\t\t\t\t{\n\t\t\t\t\tif (!/^\\d+$/.test(j))\n\t\t\t\t\t{\n\t\t\t\t\t\tok = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (ok)\n\t\t\t\t{\n\t\t\t\t\tparent[kk] = Object.values(obj);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\treturn conf;\n}\n\nexport function stringify(dataInput: unknown | IRawObjectPlus, level: number = 1, skip = [], k?): string\n{\n\tlet rs1: string[] = [];\n\tlet rs2: string[] = [];\n\n\tlet isRawObject: true | false;\n\tlet data = dataInput;\n\tlet desc;\n\n\tif (isRawObject = RawObject.isRawObject(dataInput))\n\t{\n\t\tlet rawData = dataInput.getRawData();\n\n\t\tif (rawData.paragraph)\n\t\t{\n\t\t\tdesc = rawData.paragraph.join(LF.repeat(2));\n\t\t}\n\n\t\tdata = dataInput.getRawValue();\n\n\t\tisRawObject = true as true;\n\t}\n\n\t//console.log(k);\n\n\tif (Array.isArray(data))\n\t{\n\t\tif (k || k === 0)\n\t\t{\n\t\t\trs2.push('#'.repeat(level) + '' + k + LF);\n\n\t\t\tdata.forEach(function (value, index, array)\n\t\t\t{\n\t\t\t\tlet bool = (!RawObject.isRawObject(value) && typeof value == 'object');\n\n\t\t\t\trs2.push(stringify(value, level, [], bool ? index : null));\n\t\t\t})\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdata.forEach(function (value, index, array)\n\t\t\t{\n\t\t\t\tlet bool = (!RawObject.isRawObject(value) && typeof value == 'object');\n\n\t\t\t\trs1.push(stringify(value, level, [], bool ? index : null).replace(/\\n+$/g, ''));\n\t\t\t});\n\n\t\t\t//rs1.push('');\n\t\t}\n\t}\n\telse if (typeof data == 'object')\n\t{\n\t\tif (k || k === 0)\n\t\t{\n\t\t\trs1.push('#'.repeat(level) + ' ' + k + LF);\n\t\t}\n\n\t\tfor (let k in data)\n\t\t{\n\t\t\tif (skip.includes(k))\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet isRawObject = RawObject.isRawObject(data[k]);\n\t\t\tlet row = isRawObject ? data[k].getRawValue() : data[k];\n\n\t\t\tif (Array.isArray(row))\n\t\t\t{\n\t\t\t\trs2.push('#'.repeat(level) + ' ' + k + LF);\n\t\t\t\trs2.push(stringify(row, level + 1));\n\t\t\t}\n\t\t\telse if (isPlainObject(row))\n\t\t\t{\n\t\t\t\trs2.push('#'.repeat(level) + ' ' + k + LF);\n\t\t\t\trs2.push(stringify(row, level + 1));\n\t\t\t}\n\t\t\telse if (isMoment(row))\n\t\t\t{\n\t\t\t\trs1.push(`- ${k}: ${row.format()}`);\n\t\t\t}\n\t\t\telse if (isRawObject || typeof row == 'string' && /[\\r\\n]|^\\s/g.test(row))\n\t\t\t{\n\t\t\t\tlet lang: string;\n\t\t\t\tlet val = row;\n\n\t\t\t\tval = val.replace(/^[\\r\\n]+|\\s+$/g, '');\n\n\t\t\t\tif (isRawObject)\n\t\t\t\t{\n\t\t\t\t\tlet rawData = data[k].getRawData() || {};\n\n\t\t\t\t\tif (rawData.type != 'html')\n\t\t\t\t\t{\n\t\t\t\t\t\tlang = rawData.lang;\n\n\t\t\t\t\t\tval = makeCodeBlock(val, lang);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tval = LF + val + LF;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tval = makeCodeBlock(val, lang);\n\t\t\t\t}\n\n\t\t\t\trs2.push('#'.repeat(level) + ' ' + k + LF);\n\t\t\t\trs2.push(val);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\trs1.push(`- ${k}: ${row}`);\n\t\t\t}\n\t\t}\n\t}\n\telse if (isRawObject || typeof data == 'string' && /[\\r\\n]|^\\s/g.test(data))\n\t{\n\t\tif (k || k === 0)\n\t\t{\n\t\t\trs2.push('#'.repeat(level) + ' ' + k + LF);\n\t\t}\n\n\t\tif (desc)\n\t\t{\n\t\t\trs2.push(desc);\n\t\t}\n\n\t\tlet val = data as string;\n\n\t\tval = val.replace(/^[\\r\\n]+|\\s+$/g, '');\n\n\t\tif (isRawObject)\n\t\t{\n\t\t\tlet rawData = (dataInput as IRawObjectPlus).getRawData() || {} as IRawObjectDataPlus;\n\n\t\t\tif (rawData.type != 'html')\n\t\t\t{\n\t\t\t\tval = makeCodeBlock(val, rawData.lang);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tval = LF + val + LF;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tval = makeCodeBlock(val);\n\t\t}\n\n\t\trs2.push(val);\n\t}\n\telse\n\t{\n\t\tif (desc)\n\t\t{\n\t\t\trs1.push(desc);\n\t\t}\n\n\t\trs1.push(`- ${ k || k === 0 ? k + ': ' : '' }${data}`);\n\t}\n\n\tlet out = (rs1.concat([''].concat(rs2)).join(LF)).replace(/^\\n+/g, '');\n\n\tif (level == 1)\n\t{\n\t\tout = out.replace(/^\\n+|\\s+$/g, '') + LF;\n\t}\n\n\treturn out;\n}\n\nexport default exports as typeof import('./core');\n\n"]}