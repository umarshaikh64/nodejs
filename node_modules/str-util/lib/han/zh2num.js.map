{"version":3,"file":"zh2num.js","sourceRoot":"","sources":["zh2num.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2017/12/11/011.\n */\n\nimport { chinese_parseInt, characters } from 'chinese-parseint2';\nimport { transcribeNumber, transcriptionConfigs, predefineedTranscriptionConfigs } from '@lazy-cjk/japanese';\nimport { ITSOverwrite } from 'ts-type';\n\nexport interface IOptions\n{\n\t/**\n\t * @see https://github.com/hakatashi/japanese.js/blob/master/src/numbers.es6\n \t */\n\tdigits?: string[];\n\t/**\n\t * @see https://github.com/hakatashi/japanese.js/blob/master/src/numbers.es6\n\t */\n\tunitNames?: string[];\n\n\t/**\n\t * replace all\n\t */\n\tunsafe?: boolean;\n\t/**\n\t * RegExp Flags\n\t */\n\tflags?: string;\n\n\tchars?: string;\n\n\ttruncateOne?: number | boolean;\n\n\tstrict?: boolean;\n\n\tone?: boolean;\n\n\tstring?: boolean;\n}\n\nexport const defaultOptions = {\n\tone: true,\n} as IOptions;\n\nexport { transcriptionConfigs };\n\nexport { predefineedTranscriptionConfigs };\n\n/**\n * 將漢字轉換成數字\n * Parse Chinese/Japanese numeric strings to integer\n *\n * @param str\n * @param {IOptions} options\n * @returns {string|number}\n *\n * @example zh2num('千百十七') == 1117\n */\nexport function zh2num(str: number, options?: IOptions): number\nexport function zh2num(str, options?: IOptions): string\nexport function zh2num(str, options: IOptions = {})\n{\n\toptions = Object.assign({}, defaultOptions, options);\n\n\tlet sa: string[] = [];\n\tlet do_def = true;\n\n\tlet jtc = transcriptionConfigs;\n\tlet jpc = predefineedTranscriptionConfigs;\n\n\tfor (let id of [\n\t\t'digits',\n\t\t'unitNames',\n\t])\n\t{\n\t\tif (Array.isArray(options[id]) && options[id].length)\n\t\t{\n\t\t\tfor (let d of options[id])\n\t\t\t{\n\t\t\t\tif (jpc[id][d])\n\t\t\t\t{\n\t\t\t\t\tsa = sa.concat(Object.values(jpc[id][d]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (typeof options.truncateOne === 'number')\n\t{\n\t\tfor (let i in jtc.default.truncateOne)\n\t\t{\n\t\t\t// @ts-ignore\n\t\t\tif (i < options.truncateOne)\n\t\t\t{\n\t\t\t\tsa.push(jtc.default.truncateOne[i])\n\t\t\t}\n\t\t}\n\t}\n\telse if ((typeof options.truncateOne == 'undefined' || options.truncateOne === true) && sa.length)\n\t{\n\t\tsa = sa.concat(Object.values(jtc.default.truncateOne));\n\t}\n\n\tif (options.chars)\n\t{\n\t\tsa = sa.concat(Array.isArray(options.chars) ? options.chars : options.chars.split(''));\n\t}\n\n\tif (sa.length)\n\t{\n\t\tdo_def = false;\n\t}\n\n\tsa.filter(function (value)\n\t{\n\t\tif (value.length === 1 && (value in characters))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t});\n\n\tif (do_def)\n\t{\n\t\tsa = Object.keys(characters);\n\t}\n\n\toptions.flags = (options.flags || 'u');\n\n\tif (options.unsafe)\n\t{\n\t\toptions.flags = (options.flags || '') + 'g';\n\t}\n\n\t//console.log(options, sa);\n\n\tlet rs = sa.join('');\n\n\tlet s = str.toString();\n\n\tif (!(new RegExp('([^' + rs + '])')).test(s))\n\t{\n\t\treturn _chinese_parseInt(s, options) as number;\n\t}\n\telse if (options.strict)\n\t{\n\t\treturn Number.NaN;\n\t}\n\n\tlet r = new RegExp('([' + rs + ']+)', options.flags);\n\n\treturn s.replace(r, function (...m)\n\t{\n\t\treturn _chinese_parseInt(m[1], options) as any;\n\t}).toString();\n}\n\nexport function _chinese_parseInt(str: string, options: IOptions & {\n\tstring: true,\n}): string\nexport function _chinese_parseInt(str: string, options?: IOptions & {\n\tstring?: false,\n}): number\nexport function _chinese_parseInt(str: string, options?: IOptions): number\nexport function _chinese_parseInt(str: string, options: IOptions = {}): number | string\n{\n\tif (options.one)\n\t{\n\t\tstr = str.replace(/([佰百])([一二三四五六七八九壹貳參肆伍陸柒捌玖])(?![零○〇一二三四五六七八九壹貳參肆伍陸柒捌玖拾十什])/, '$1〇$2');\n\t}\n\n\tlet ret = chinese_parseInt(str);\n\n\tif (options.string)\n\t{\n\t\t// @ts-ignore\n\t\tret = ret.toString();\n\t}\n\n\treturn ret;\n}\n\n/**\n * 將數字轉為漢字\n *\n * @param number\n * @param options\n * @returns {string}\n *\n * @example num2zh(1117) == '千百十七'\n */\nexport function num2zh(number, options: any = {}): string\n{\n\tlet d = parseInt(number);\n\n\tif (Number.isNaN(d) || (options && options.strict && (typeof number != 'number' || d !== number)))\n\t{\n\t\tthrow new TypeError(`${number} is not valid allow number`);\n\t}\n\n\treturn transcribeNumber(d, options);\n}\n\nexport default exports as typeof import('./zh2num');\n"]}