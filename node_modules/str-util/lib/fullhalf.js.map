{"version":3,"file":"fullhalf.js","sourceRoot":"","sources":["fullhalf.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2017/12/8/008.\n */\n\nimport deepmerge from 'deepmerge';\nimport util from './util';\nimport UString from 'uni-string';\n\nexport namespace FullHalfCore\n{\n\texport const enum EnumFullHalfTableType\n\t{\n\t\tFULL_WIDTH = 1,\n\t\tHALF_WIDTH = 0,\n\t\tNO_EXIST = -1,\n\t}\n\n\texport const FULL_WIDTH = EnumFullHalfTableType.FULL_WIDTH;\n\texport const HALF_WIDTH = EnumFullHalfTableType.HALF_WIDTH;\n\n\texport const NO_EXIST = EnumFullHalfTableType.NO_EXIST;\n\n\texport interface IOptionsType\n\t{\n\t\teng?: boolean,\n\t\tnumber?: boolean,\n\n\t\t/**\n\t\t * eng & number\n\t\t */\n\t\tboth?: boolean;\n\n\t\tspace?: boolean;\n\t\texists?: boolean;\n\n\t\tdefault?: boolean;\n\t\tnot_default?: boolean;\n\t\tnot_default2?: boolean;\n\n\t\tslash?: boolean;\n\t\tbracket?: boolean;\n\n\t\t[index: string]: boolean;\n\t}\n\n\texport interface IOptionsBase\n\t{\n\t\ttype?: number;\n\n\t\tskip?: IOptionsType;\n\t\tonly?: IOptionsType;\n\n\t\tmode?: {\n\t\t\tonly?: boolean,\n\n\t\t\t[index: string]: boolean;\n\t\t};\n\t}\n\n\texport type IOptionsTrue = IOptionsBase & {\n\n\t\t/**\n\t\t * 回傳直接回傳陣列而不組合成字串\n\t\t */\n\t\treturnType: ILazyTrue;\n\n\t}\n\n\texport type IOptionsFalse = IOptionsBase & {\n\n\t\t/**\n\t\t * 回傳直接回傳陣列而不組合成字串\n\t\t */\n\t\treturnType?: ILazyFalse;\n\n\t}\n\n\texport type IOptions = IOptionsBase & {\n\n\t\t/**\n\t\t * 回傳直接回傳陣列而不組合成字串\n\t\t */\n\t\treturnType?: ILazyTrue | ILazyFalse;\n\n\t}\n\n\texport interface ITableObject\n\t{\n\t\tfrom?: number;\n\t\tto?: number;\n\n\t\tvalues?: number[];\n\n\t\tnot?: ITableObject[],\n\t}\n\n\texport interface ITable\n\t{\n\t\tdefault?: ITableObject;\n\n\t\tnumber?: ITableObject;\n\t\tspace?: ITableObject;\n\n\t\t'A-Z'?: ITableObject;\n\t\t'a-z'?: ITableObject;\n\n\t\tnot_default?: ITableObject;\n\n\t\t[index: string]: ITableObject;\n\t}\n\n\t/**\n\t * @see https://en.wikipedia.org/wiki/Code_page_437\n\t */\n\tlet _table = {\n\t\tdefault: {\n\t\t\tfrom: 0x0020 + 1,\n\t\t\tto: 0x007F - 1,\n\t\t\tvalues: [0x0020],\n\t\t},\n\n\t\tnumber: [0x0030, 0x0039],\n\n\t\t'A-Z': [0x0041, 0x005A],\n\t\t'a-z': [0x0061, 0x007A],\n\n\t\tspace: [0x0020],\n\n\t\tslash: {\n\t\t\tvalues: util.charCodeAt(`/\\\\`),\n\t\t},\n\n\t\tbracket: {\n\t\t\tvalues: util.charCodeAt(`()[]{}`),\n\t\t},\n\t};\n\n\texport let tableDefaultInclude = [\n\t\t'number',\n\t\t'A-Z',\n\t\t'a-z',\n\t\t'space',\n\t\t'not_default',\n\t];\n\n\texport let table: ITable[] = [];\n\n\t{\n\t\tlet _keys = tableDefaultInclude.slice(0, -1);\n\n\t\ttable[0] = {};\n\t\ttable[1] = {};\n\n\t\tfor (let k in _table)\n\t\t{\n\t\t\tlet v = _table[k];\n\n\t\t\tlet r;\n\n\t\t\tr = fn(v);\n\n\t\t\tif (r)\n\t\t\t{\n\t\t\t\ttable[EnumFullHalfTableType.HALF_WIDTH][k] = r[1];\n\t\t\t\ttable[EnumFullHalfTableType.FULL_WIDTH][k] = r[0];\n\t\t\t}\n\t\t}\n\n\t\tlet r = fn(_table.default);\n\n\t\tr[0].not = [];\n\t\tr[1].not = [];\n\n\t\tfor (let k of _keys)\n\t\t{\n\t\t\tlet v = _table[k];\n\n\t\t\tlet r2;\n\n\t\t\tr2 = fn(v);\n\n\t\t\tif (r2)\n\t\t\t{\n\t\t\t\tr[0].not.push(r2[0]);\n\t\t\t\tr[1].not.push(r2[1]);\n\t\t\t}\n\t\t}\n\n\t\ttable[EnumFullHalfTableType.HALF_WIDTH]['not_default'] = r[1];\n\t\ttable[EnumFullHalfTableType.FULL_WIDTH]['not_default'] = r[0];\n\n\t\t//console.log(table);\n\n\t\tfunction fn(v)\n\t\t{\n\t\t\tlet r: ITableObject[] = [];\n\n\t\t\tr[0] = {};\n\t\t\tr[1] = {};\n\n\t\t\tlet _skip = true;\n\n\t\t\tif (Array.isArray(v))\n\t\t\t{\n\t\t\t\tif (v.length == 2)\n\t\t\t\t{\n\t\t\t\t\tr[0].from = v[0];\n\t\t\t\t\tr[0].to = v[1];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tr[0].values = v;\n\t\t\t\t}\n\n\t\t\t\t_skip = false;\n\t\t\t}\n\n\t\t\tif (v.from && v.to)\n\t\t\t{\n\t\t\t\tr[0].from = v.from;\n\t\t\t\tr[0].to = v.to;\n\n\t\t\t\t_skip = false;\n\t\t\t}\n\n\t\t\tif (Array.isArray(v.values) && v.values.length)\n\t\t\t{\n\t\t\t\tr[0].values = v.values;\n\n\t\t\t\t_skip = false;\n\t\t\t}\n\n\t\t\tif (_skip)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (r[0].from && r[0].to)\n\t\t\t{\n\t\t\t\tr[1].from = toFullWidth(r[0].from);\n\t\t\t\tr[1].to = toFullWidth(r[0].to);\n\t\t\t}\n\n\t\t\tif (r[0].values)\n\t\t\t{\n\t\t\t\tr[1].values = (r[0].values as number[]).reduce(function (a, code)\n\t\t\t\t{\n\t\t\t\t\ta.push(toFullWidth(code));\n\n\t\t\t\t\treturn a;\n\t\t\t\t}, []);\n\t\t\t}\n\n\t\t\treturn r;\n\t\t}\n\t}\n\n\texport function filterTable(data)\n\t{\n\t\tlet _a = [];\n\n\t\tif (data.from && data.to)\n\t\t{\n\t\t\tfor (let i = data.from; i<=data.to; i++)\n\t\t\t{\n\t\t\t\t_a.push(i);\n\t\t\t}\n\t\t}\n\n\t\tif (data.values)\n\t\t{\n\t\t\t_a = _a.concat(data.values)\n\t\t}\n\n\t\tif (Array.isArray(data.not) && data.not.length)\n\t\t{\n\t\t\t_a = _a.filter(function (charCode)\n\t\t\t{\n\t\t\t\tfor (let d of data.not)\n\t\t\t\t{\n\t\t\t\t\tif (_chkType(charCode, d))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\n\t\treturn _a;\n\t}\n\n\texport function _chkType(charCode: number, data: ITableObject)\n\t{\n\t\tif (data.from && data.to && data.from <= charCode && charCode <= data.to)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse if (data.values && data.values.includes(charCode))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\texport function chkType(charCode: number, key: string, type: number)\n\t{\n\t\tlet data = table[type][key];\n\n\t\t//console.log(charCode, data);\n\n\t\tif (Array.isArray(data.not) && data.not.length)\n\t\t{\n\t\t\tfor (let d of data.not)\n\t\t\t{\n\t\t\t\tif (_chkType(charCode, d))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (_chkType(charCode, data))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\texport function hasFullHalf(charCode: number)\n\t{\n\t\tif (0x0020 <= charCode && charCode < 0x007F)\n\t\t{\n\t\t\treturn EnumFullHalfTableType.HALF_WIDTH;\n\t\t}\n\n\t\tif (0x3000 === charCode || 0xFF00 < charCode && charCode < 0xFF5F)\n\t\t{\n\t\t\treturn EnumFullHalfTableType.FULL_WIDTH;\n\t\t}\n\n\t\treturn EnumFullHalfTableType.NO_EXIST;\n\t}\n\n\texport function isFullHalf(charCode: number)\n\t{\n\t\tlet r = hasFullHalf(charCode);\n\n\t\tif (r === EnumFullHalfTableType.FULL_WIDTH)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse if (r === EnumFullHalfTableType.HALF_WIDTH)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// @todo add more...\n\t\t}\n\n\t\treturn null;\n\t}\n\n\texport function toFullWidth(charCode: number)\n\t{\n\t\tif (0x0020 < charCode && charCode < 0x007F)\n\t\t{\n\t\t\treturn 0xFF00 + (charCode - 0x0020);\n\t\t}\n\n\t\tif (0x0020 === charCode)\n\t\t{\n\t\t\treturn 0x3000;\n\t\t}\n\n\t\treturn charCode;\n\t}\n\n\texport function toHalfWidth(charCode: number)\n\t{\n\t\tif (0xFF00 < charCode && charCode < 0xFF5F)\n\t\t{\n\t\t\treturn 0x0020 + (charCode - 0xFF00);\n\t\t}\n\n\t\tif (0x3000 === charCode)\n\t\t{\n\t\t\treturn 0x0020;\n\t\t}\n\n\t\treturn charCode;\n\t}\n\n\texport function _optionsType(data: IOptionsType)\n\t{\n\t\tif (data)\n\t\t{\n\t\t\tif (typeof data.exists == 'boolean')\n\t\t\t{\n\t\t\t\tfor (let key in table[0])\n\t\t\t\t{\n\t\t\t\t\tif (key.indexOf('default') == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data[key] !== false)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata[key] = data.exists;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdelete data.exists;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (typeof data.default == 'boolean')\n\t\t\t\t{\n\t\t\t\t\tfor (let key of tableDefaultInclude)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (data[key] !== false)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata[key] = data.default;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete data.default;\n\t\t\t\t}\n\n\t\t\t\tif (typeof data.not_default2 == 'boolean')\n\t\t\t\t{\n\t\t\t\t\tdata.both = data.space = data.not_default2;\n\t\t\t\t\tdelete data.not_default2;\n\t\t\t\t}\n\n\t\t\t\tif (typeof data.both == 'boolean')\n\t\t\t\t{\n\t\t\t\t\tdata.number = data.eng = data.both;\n\t\t\t\t\tdelete data.both;\n\t\t\t\t}\n\n\t\t\t\tif (typeof data.eng == 'boolean')\n\t\t\t\t{\n\t\t\t\t\tdata['a-z'] = data['A-Z'] = data.eng;\n\t\t\t\t\tdelete data.eng;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\texport function process<T, U = string>(str, charProcess, options: IOptions)\n\t{\n\t\tlet ret: number[] = [];\n\n\t\toptions.skip = _optionsType(options.skip);\n\t\toptions.only = _optionsType(options.only);\n\n\t\t//console.log(options);\n\n\t\tlet _str = Array.isArray(str) ? str : new UString(str);\n\n\t\tfor (let char of _str)\n\t\t{\n\t\t\tlet _skip: boolean;\n\n\t\t\t// @ts-ignore\n\t\t\t//let charCode = typeof char == 'number' ? char : char.charCodeAt();\n\t\t\tlet charCode = typeof char == 'number' ? char : char.codePointAt();\n\n\t\t\tif (options.only)\n\t\t\t{\n\t\t\t\t_skip = true;\n\n\t\t\t\tfor (let key in options.only)\n\t\t\t\t{\n\t\t\t\t\t//console.log(char, charCode, [key], chkType(charCode, key, options.type));\n\n\t\t\t\t\tif (options.only[key] && chkType(charCode, key, options.type))\n\t\t\t\t\t{\n\t\t\t\t\t\t_skip = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//console.log(char, charCode, _skip);\n\t\t\t}\n\n\t\t\tif (!_skip && options.skip)\n\t\t\t{\n\t\t\t\tfor (let key in options.skip)\n\t\t\t\t{\n\t\t\t\t\tif (options.skip[key] && chkType(charCode, key, options.type))\n\t\t\t\t\t{\n\t\t\t\t\t\t_skip = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (_skip)\n\t\t\t{\n\t\t\t\tret.push(charCode);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tret.push(charProcess(charCode));\n\t\t}\n\n\t\tif (options.returnType)\n\t\t{\n\t\t\treturn ret as number[];\n\t\t}\n\n\t\t//return String.fromCharCode.apply(String, ret);\n\t\treturn String.fromCodePoint.apply(String, ret);\n\t}\n\n\texport function factory<T = string>(charProcessor, type: number | EnumFullHalfTableType, overwriteOptions?: IOptions): IFactoryFn\n\t{\n\t\t//const deepmerge = require('deepmerge');\n\n\t\t// @ts-ignore\n\t\treturn (str, options?: IOptions) =>\n\t\t{\n\t\t\toptions = deepmerge.all([\n\t\t\t\t{\n\t\t\t\t\t//skip: {},\n\t\t\t\t}, options || {}, overwriteOptions || {}, {\n\t\t\t\t\ttype: type,\n\t\t\t\t},\n\t\t\t]);\n\n\t\t\t//console.log(options);\n\n\t\t\treturn process<T>(str, charProcessor, options);\n\t\t};\n\t}\n\n\ttype ILazyTrue = true | 1;\n\ttype ILazyFalse = 0 | false | void | undefined | null;\n\n\texport interface IFactoryFn\n\t{\n\t\t(str: string | string[], options?: IOptionsFalse): string\n\t\t(str: (string | number)[], options: IOptionsTrue): number[]\n\n\t\t(str, options: IOptionsTrue): number[]\n\n\t\t(str: (string | number)[]): string\n\n\t\t(str: (string | number)[], options?: IOptionsFalse): string\n\n\t\t(str, options: IOptionsFalse): string\n\n\t\t(str, options: IOptions): string | number[]\n\t}\n}\n\nexport import IFactoryFn = FullHalfCore.IFactoryFn;\nexport import EnumFullHalfTableType = FullHalfCore.EnumFullHalfTableType;\nexport import IOptions = FullHalfCore.IOptions;\nexport import IOptionsType = FullHalfCore.IOptionsType;\nexport import ITable = FullHalfCore.ITable;\nexport import ITableObject = FullHalfCore.ITableObject;\n\nlet typeOnly: FullHalfCore.IOptions = {\n\tonly: {\n\t\tnumber: true,\n\t},\n};\n\nexport const toFullNumber = FullHalfCore.factory<string>(FullHalfCore.toFullWidth, FullHalfCore.EnumFullHalfTableType.FULL_WIDTH, typeOnly);\nexport const toHalfNumber = FullHalfCore.factory<string>(FullHalfCore.toHalfWidth, FullHalfCore.EnumFullHalfTableType.HALF_WIDTH, typeOnly);\n\ntypeOnly = {\n\tonly: {\n\t\teng: true,\n\t},\n};\n\nexport const toFullEnglish = FullHalfCore.factory<string>(FullHalfCore.toFullWidth, FullHalfCore.EnumFullHalfTableType.FULL_WIDTH, typeOnly);\nexport const toHalfEnglish = FullHalfCore.factory<string>(FullHalfCore.toHalfWidth, FullHalfCore.EnumFullHalfTableType.HALF_WIDTH, typeOnly);\n\ntypeOnly = {\n\tonly: {\n\t\tdefault: true,\n\t},\n};\n\nexport const toFullWidth = FullHalfCore.factory<string>(FullHalfCore.toFullWidth, FullHalfCore.EnumFullHalfTableType.FULL_WIDTH, typeOnly);\nexport const toHalfWidth = FullHalfCore.factory<string>(FullHalfCore.toHalfWidth, FullHalfCore.EnumFullHalfTableType.HALF_WIDTH, typeOnly);\n\nexport default exports as typeof import('./fullhalf');\n\n//console.log(toFullEnglish('123abcABCＡＢＣ１２３／＊－＋＝－０］［’；／．+-*/=-09][\\'\";/.'));\n//console.log(toHalfEnglish('123abcABCＡＢＣ１２３／＊－＋＝－０］［’；／．+-*/=-09][\\'\";/.'));\n//console.log(toFullNumber('123abcABCＡＢＣ１２３／＊－＋＝－０］［’；／．+-*/=-09][\\'\";/.'));\n//console.log(toHalfNumber('123abcABCＡＢＣ１２３／＊－＋＝－０］［’；／．+-*/=-09][\\'\";/.'));\n"]}