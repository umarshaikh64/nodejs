{"version":3,"file":"types.js","sourceRoot":"","sources":["types.ts"],"names":[],"mappings":";AAAA;;GAEG;;;AAEH,IAAY,eAIX;AAJD,WAAY,eAAe;IAE1B,mEAAe,CAAA;IACf,+EAAqB,CAAA;AACtB,CAAC,EAJW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAI1B","sourcesContent":["/**\n * Created by user on 2020/6/5.\n */\n\nexport enum EnumToLowerCase\n{\n\ttoLowerCase = 1,\n\ttoLocaleLowerCase = 2,\n}\n\nexport interface IFnSortCallback\n{\n\t(a: string, b: string, isSub?: boolean): number;\n\n\tfailbackSort(a, b): number;\n\ttrigger(a: string, b: string, data: ITriggerData): number;\n\ttranspile(input, isSub?, ...argv): string;\n\ttranspileBase(input, isSub?, ...argv): string;\n\tfnSortCallback(a: string, b: string, isSub?: boolean): number;\n}\n\nexport type ICreateSortCallbackOptions = {\n\tdotNum?: boolean,\n\t/**\n\t * will change base input value\n\t */\n\ttoLowerCase?: EnumToLowerCase | boolean | ((input, isSub?, ...argv) => string),\n} & IFnSortCallbackProp;\n\nexport interface IFnSortCallbackProp\n{\n\t/**\n\t * failback compare\n\t */\n\tfailbackSort?(a, b): number,\n\n\t/**\n\t * compare transpile value\n\t */\n\ttrigger?(a: string, b: string, data: ITriggerData): number,\n\n\t/**\n\t * will change input value for trigger only\n\t */\n\ttranspile?(input, isSub?, ...argv): string,\n\n\t/**\n\t * will change base input value\n\t */\n\ttranspileBase?(input, isSub?, ...argv): string,\n}\n\nexport interface ITriggerData\n{\n\tr: RegExp,\n\tmainFn: IFnSortCallback,\n\tisSub: boolean,\n}\n"]}