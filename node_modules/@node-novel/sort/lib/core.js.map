{"version":3,"file":"core.js","sourceRoot":"","sources":["core.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2020/6/5.\n */\n\nimport naturalCompare from '@bluelovers/string-natural-compare';\nimport { ICreateSortCallbackOptions, IFnSortCallback, EnumToLowerCase } from './types';\nimport { _match, _trim } from './util';\n\n/**\n * create a compare callback by (transpileBase value) -> trigger(transpile value) -> failbackSort\n * @param options\n */\nexport function createSortCallback(options: ICreateSortCallbackOptions = {}): IFnSortCallback\n{\n\tconst r = options.dotNum ? /^(\\d+(?:\\.\\d+)?)/ : /^(\\d+)/;\n\n\tconst failbackSort = options.failbackSort || naturalCompare;\n\tconst trigger = options.trigger || _match;\n\tlet transpile = options.transpile || _trim;\n\tlet transpileBase = options.transpileBase;\n\n\tif (options.toLowerCase)\n\t{\n\t\tlet fnLowerCase: (input: string, ...argv) => string;\n\n\t\tif (typeof options.toLowerCase === 'function')\n\t\t{\n\t\t\tfnLowerCase = options.toLowerCase;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet fn = 'toLowerCase';\n\n\t\t\tif (typeof options.toLowerCase === 'number')\n\t\t\t{\n\t\t\t\tif (options.toLowerCase !== EnumToLowerCase.toLowerCase)\n\t\t\t\t{\n\t\t\t\t\tfn = 'toLocaleLowerCase';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfnLowerCase = (input: string, ...argv) => input[fn](...argv);\n\t\t}\n\n\t\tif (fnLowerCase)\n\t\t{\n\t\t\tif (transpileBase)\n\t\t\t{\n\t\t\t\ttranspileBase = ((old) =>\n\t\t\t\t{\n\t\t\t\t\treturn function (input, ...argv)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn fnLowerCase(old(input, ...argv), ...argv)\n\t\t\t\t\t}\n\t\t\t\t})(transpileBase);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttranspileBase = fnLowerCase;\n\t\t\t}\n\t\t}\n\t}\n\n\tlet fnSortCallback: IFnSortCallback = function fnSortCallback(a: string, b: string, isSub?: boolean): number\n\t{\n\t\tif (a === b)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet ret = trigger(transpile(a, isSub), transpile(b, isSub), {\n\t\t\tr,\n\t\t\tmainFn: fnSortCallback as IFnSortCallback,\n\t\t\tisSub,\n\t\t});\n\n\t\treturn (typeof ret == 'number') ? ret : failbackSort(a, b);\n\t} as IFnSortCallback;\n\n\tif (transpileBase)\n\t{\n\t\tfnSortCallback = (function (oldFn)\n\t\t{\n\t\t\treturn function (a: string, b: string, isSub?: boolean): number\n\t\t\t{\n\t\t\t\tif (a === b)\n\t\t\t\t{\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tif (isSub)\n\t\t\t\t{\n\t\t\t\t\treturn oldFn(a, b, isSub);\n\t\t\t\t}\n\n\t\t\t\treturn oldFn(transpileBase(a), transpileBase(b), isSub);\n\t\t\t} as IFnSortCallback\n\t\t})(fnSortCallback);\n\t}\n\telse\n\t{\n\t\ttranspileBase = (input: string) => input;\n\t}\n\n\tfnSortCallback.failbackSort = failbackSort;\n\tfnSortCallback.trigger = trigger;\n\tfnSortCallback.transpile = transpile;\n\tfnSortCallback.transpileBase = transpileBase;\n\tfnSortCallback.fnSortCallback = fnSortCallback;\n\n\treturn fnSortCallback;\n}\n"]}