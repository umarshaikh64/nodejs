{"version":3,"file":"epub-extract.js","sourceRoot":"","sources":["epub-extract.ts"],"names":[],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n\nimport { globby } from 'node-novel-globby';\nimport yargs from 'yargs';\nimport path from 'path';\nimport epubExtract, { IOptions } from '../index';\nimport Promise from 'bluebird';\n\nlet cli = yargs\n\t.usage(\"$0 [-o dir] [-i file]\")\n\t.example('$0 -o epub name.epub', 'extract name.epub to epub dir')\n\n\t.command('all', 'extract all epub')\n\t.alias('a', 'all')\n\n\t.command('v', 'show log')\n\n\t.alias('o', 'output')\n\t.nargs('o', 1)\n\t.describe('o', 'output dir path')\n\n\t.alias('i', 'input')\n\t.nargs('i', 1)\n\t.describe('i', 'input file path')\n;\n\n//console.log(cli.argv);\n\nlet srcFile: string = (cli.argv.input || cli.argv._[0]) as string;\nlet outputDir: string = cli.argv.output as string;\n\n(async () =>\n{\n\tlet cwd = process.cwd();\n\n\tconsole.log(cwd);\n\n\t{\n\t\tlet chk = path.relative(cwd, __dirname);\n\t\tif (['', '.', '..'].includes(chk))\n\t\t{\n\t\t\treturn Promise.reject(`not allow cwd path \"${cwd}\"`);\n\t\t}\n\t}\n\n\tlet ls: string[];\n\n\tlet options: IOptions = {\n\t\tcwd,\n\t\toutputDir,\n\t\tlog: cli.argv.v as boolean,\n\t};\n\n\tif (!srcFile)\n\t{\n\t\tls = await globby([\n\t\t\t'*.epub',\n\t\t], {\n\t\t\tcwd,\n\t\t\tabsolute: true,\n\t\t});\n\n\t\tif (cli.argv.all === true)\n\t\t{\n\t\t\tif (!ls.length)\n\t\t\t{\n\t\t\t\treturn Promise.reject(`can't found any epub file in \"${cwd}\"`)\n\t\t\t}\n\n\t\t\treturn Promise\n\t\t\t\t.map(ls, function (srcFile)\n\t\t\t{\n\t\t\t\treturn epubExtract(srcFile, options);\n\t\t\t})\n\t\t\t\t.then(function (ls)\n\t\t\t\t{\n\t\t\t\t\treturn ls.join(\"\\n\");\n\t\t\t\t})\n\t\t\t\t;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsrcFile = ls[0];\n\t\t}\n\t}\n\n\tif (!srcFile)\n\t{\n\t\tcli.showHelp('log');\n\n\t\tconsole.log(['current epub list:'].concat(ls || []).join(\"\\n- \"));\n\t}\n\telse\n\t{\n\t\treturn await epubExtract(srcFile, options);\n\t}\n})()\n\t.catch(function (e)\n\t{\n\t\tcli.showHelp();\n\n\t\tif (e instanceof Error)\n\t\t{\n\t\t\tconsole.trace(e);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.error('[ERROR]', e);\n\t\t}\n\t})\n\t.then(function (ls)\n\t{\n\t\tconsole.log('[DONE]\\n', ls);\n\t})\n;\n\n"]}