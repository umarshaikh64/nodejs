{"version":3,"file":"symbol.js","sourceRoot":"","sources":["symbol.ts"],"names":[],"mappings":";AAAA;;GAEG;;;AAEH,mCAA0D;AAE7C,QAAA,aAAa,GAAG;IAE5B,OAAO,EAAE,KAAK;IACd,KAAK,EAAE,KAAK;IACZ,OAAO,EAAE,KAAK;IACd,MAAM,EAAE,KAAK;IACb,KAAK,EAAE,KAAK;CAEZ,CAAC;AAEF,aAAa;AACb,SAAgB,UAAU,CAAI,cAAoC,MAAM;IAEvE,IAAI,CAAC,GAAG,oBAAY,CAAC,EAAE,EAAE,EAAE,EAAE,WAAW,CAAC,CAAC;IAE1C,OAAO,MAAM,CAAC,IAAI,CAAC,qBAAa,CAAC;SAC/B,MAAM,CAAC,UAAU,CAAC,EAAE,GAAG;QAGvB,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAE3C,OAAO,CAAC,CAAC;IACV,CAAC,EAAE,EAA0B,CAAC,CAC7B;AACH,CAAC;AAbD,gCAaC","sourcesContent":["/**\n * Created by user on 2018/4/28/028.\n */\n\nimport { createRegExp, ITypeCreateRegExp } from './index';\n\nexport const REGEXP_SYMBOL = {\n\n\tspecies: false,\n\tmatch: false,\n\treplace: false,\n\tsearch: false,\n\tsplit: false,\n\n};\n\n// @ts-ignore\nexport function testSymbol<T>(RegExpClass: ITypeCreateRegExp<T> = RegExp)\n{\n\tlet r = createRegExp('', '', RegExpClass);\n\n\treturn Object.keys(REGEXP_SYMBOL)\n\t\t.reduce(function (a, key)\n\t\t{\n\n\t\t\ta[key] = (Symbol[key] && Symbol[key] in r);\n\n\t\t\treturn a;\n\t\t}, {} as typeof REGEXP_SYMBOL)\n\t\t;\n}\n\n"]}