{"version":3,"file":"static.js","sourceRoot":"","sources":["static.ts"],"names":[],"mappings":";AAAA;;GAEG;AACH,mCAAmC;AACnC,qCAAqC;;;AAErC,oCAA2D;AAmG9C,QAAA,aAAa,GAAG;IAE5B,EAAE,EAAE,KAAK;IACT,EAAE,EAAE,KAAK;IACT,EAAE,EAAE,KAAK;IACT,EAAE,EAAE,KAAK;IACT,EAAE,EAAE,KAAK;IACT,EAAE,EAAE,KAAK;IACT,EAAE,EAAE,KAAK;IACT,EAAE,EAAE,KAAK;IACT,EAAE,EAAE,KAAK;IAET,KAAK,EAAE,KAAK;IACZ,EAAE,EAAE,KAAK;IAET,SAAS,EAAE,KAAK;IAChB,IAAI,EAAE,KAAK;IAEX,SAAS,EAAE,KAAK;IAChB,IAAI,EAAE,KAAK;IAEX,WAAW,EAAE,KAAK;IAClB,IAAI,EAAE,KAAK;IAEX,YAAY,EAAE,KAAK;IACnB,KAAK,EAAE,KAAK;IAEZ,GAAG,EAAE,KAAK;IACV,IAAI,EAAE,KAAK;CAIX,CAAC;AAEF,aAAa;AACb,SAAgB,UAAU,CAAI,cAAoC,MAAM;IAEvE,IAAI,EAAE,GAAG,WAAW,CAAC;IACrB,IAAI,EAAE,GAAG,oBAAY,CAAC,WAAW,EAAE,GAAG,EAAE,WAAW,CAAC,CAAC;IAErD,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAExB,OAAO,MAAM,CAAC,IAAI,CAAC,qBAAa,CAAC;SAC/B,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC;QAErB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QAEjB,IAAI,CAAC,CAAC,CAAC,CAAC,EACR;YACC,QAAQ,CAAC,EACT;gBACC,KAAK,aAAa,CAAC;gBACnB,KAAK,IAAI;oBACR,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC;oBAC1B,MAAM;gBACP,KAAK,cAAc,CAAC;gBACpB,KAAK,IAAI;oBACR,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;oBACrB,MAAM;gBACP,KAAK,WAAW,CAAC;gBACjB,KAAK,IAAI;oBACR,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC;oBACtB,MAAM;gBACP,KAAK,WAAW,CAAC;gBACjB,KAAK,IAAI;oBACR,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC;oBACzB,MAAM;gBACP,KAAK,OAAO,CAAC;gBACb,KAAK,IAAI;oBACR,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,cAAc,CAAC;oBAChC,MAAM;gBACP,KAAK,IAAI;oBACR,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC;oBACvB,MAAM;gBACP,KAAK,IAAI;oBACR,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC;oBACtB,MAAM;gBACP,QAAQ;gBACP,wBAAwB;aACzB;SACD;QAED,OAAO,CAAC,CAAC;IACV,CAAC,EAAE,EAA0B,CAAC,CAC7B;AACH,CAAC;AAlDD,gCAkDC","sourcesContent":["/**\n * Created by user on 2018/4/28/028.\n */\n/// <reference lib=\"es2015.core\" />\n/// <reference lib=\"es2018.regexp\" />\n\nimport { createRegExp, ITypeCreateRegExp } from '../index';\n\ninterface IRegExpStaticPlus\n{\n\n\t/**\n\t * RegExp.input ($_)\n\t *\n\t * The non-standard input property is a static property of regular expressions that contains the string against which a regular expression is matched.\n\t * RegExp.$_ is an alias for this property.\n\t *\n\t * @code var re = /hi/g;\n\t re.test('hi there!');\n\t RegExp.input;         // \"hi there!\"\n\t re.test('foo');       // new test, non-matching\n\t RegExp.$_;            // \"hi there!\"\n\t re.test('hi world!'); // new test, matching\n\t RegExp.$_;            // \"hi world!\"\n\t */\n\tinput: string,\n\t$_: string,\n\n\t/**\n\t * RegExp.lastMatch ($&)\n\t *\n\t * The non-standard lastMatch property is a static and read-only property of regular expressions that contains the last matched characters.\n\t * RegExp.$& is an alias for this property.\n\t *\n\t * @code var re = /hi/g;\n\t re.test('hi there!');\n\t RegExp.lastMatch; // \"hi\"\n\t RegExp['$&'];     // \"hi\"\n\t */\n\tlastMatch: string,\n\t'$&': string,\n\n\t/**\n\t * RegExp.lastParen ($+)\n\t *\n\t * The non-standard lastParen property is a static and read-only property of regular expressions that contains the last parenthesized substring match, if any.\n\t * RegExp.$+ is an alias for this property.\n\t *\n\t * @code var re = /(hi)/g;\n\t re.test('hi there!');\n\t RegExp.lastParen; // \"hi\"\n\t RegExp['$+'];     // \"hi\"\n\t */\n\tlastParen: string,\n\t'$+': string,\n\n\t/**\n\t * RegExp.leftContext ($`)\n\t *\n\t * The non-standard leftContext property is a static and read-only property of regular expressions that contains the substring preceding the most recent match.\n\t * RegExp.$` is an alias for this property.\n\t *\n\t * @code var re = /world/g;\n\t re.test('hello world!');\n\t RegExp.leftContext; // \"hello \"\n\t RegExp['$`'];       // \"hello \"\n\t */\n\tleftContext: string,\n\t'$`': string,\n\n\t/**\n\t * RegExp.rightContext ($')\n\t *\n\t * The non-standard rightContext property is a static and read-only property of regular expressions that contains the substring following the most recent match.\n\t * RegExp.$' is an alias for this property.\n\t *\n\t * @code var re = /hello/g;\n\t re.test('hello world!');\n\t RegExp.rightContext; // \" world!\"\n\t RegExp[\"$'\"];       // \" world!\"\n\t */\n\trightContext: string,\n\t'$\\'': string,\n\n}\n\ndeclare global\n{\n\tinterface RegExpConstructor extends IRegExpStaticPlus\n\t{\n\t}\n}\n\nexport interface IRegExpStatic extends RegExpConstructor, IRegExpStaticPlus\n{\n}\n\nexport interface IRegExpStatic2 extends IRegExpStatic\n{\n\n\t$10?: string,\n\t$100?: string,\n\n}\n\nexport const REGEXP_STATIC = {\n\n\t$1: false,\n\t$2: false,\n\t$3: false,\n\t$4: false,\n\t$5: false,\n\t$6: false,\n\t$7: false,\n\t$8: false,\n\t$9: false,\n\n\tinput: false,\n\t$_: false,\n\n\tlastMatch: false,\n\t'$&': false,\n\n\tlastParen: false,\n\t'$+': false,\n\n\tleftContext: false,\n\t'$`': false,\n\n\trightContext: false,\n\t'$\\'': false,\n\n\t$10: false,\n\t$100: false,\n\n} as {\n\t[k in keyof IRegExpStatic2]?: boolean\n};\n\n// @ts-ignore\nexport function testStatic<T>(RegExpClass: ITypeCreateRegExp<T> = RegExp)\n{\n\tlet rc = RegExpClass;\n\tlet re = createRegExp('(wor)(ld)', 'g', RegExpClass);\n\n\tre.test('hello world!');\n\n\treturn Object.keys(REGEXP_STATIC)\n\t\t.reduce(function (a, b)\n\t\t{\n\t\t\ta[b] = (b in rc);\n\n\t\t\tif (a[b])\n\t\t\t{\n\t\t\t\tswitch (b)\n\t\t\t\t{\n\t\t\t\t\tcase 'leftContext':\n\t\t\t\t\tcase '$`':\n\t\t\t\t\t\ta[b] = rc[b] === 'hello ';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'rightContext':\n\t\t\t\t\tcase \"$'\":\n\t\t\t\t\t\ta[b] = rc[b] === '!';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'lastParen':\n\t\t\t\t\tcase \"$+\":\n\t\t\t\t\t\ta[b] = rc[b] === 'ld';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'lastMatch':\n\t\t\t\t\tcase '$&':\n\t\t\t\t\t\ta[b] = rc[b] === 'world';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'input':\n\t\t\t\t\tcase '$_':\n\t\t\t\t\t\ta[b] = rc[b] === 'hello world!';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '$1':\n\t\t\t\t\t\ta[b] = rc[b] === 'wor';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '$2':\n\t\t\t\t\t\ta[b] = rc[b] === 'ld';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t//console.log(b, rc[b]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}, {} as typeof REGEXP_STATIC)\n\t\t;\n}\n"]}