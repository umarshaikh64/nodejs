{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";AAAA;;GAEG;;;;;;AAEH,mFAAqE;AAGrE,0CAA8C;AAE9C,SAAgB,YAAY,CAAC,OAAO,EAAE,KAA8C,cAAc,EAAE,QAAa,EAAE;IAElH,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,CAAmB,EAAE,CAAsB;QAE7E,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAEb,IAAI,CAAC,KAAK,IAAI,IAAI,OAAO,CAAC,IAAI,QAAQ,EACtC;YACC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACV;aAED;YACC,IAAI,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1B,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,kBAAW,CAAC,CAAC,CAAC,CAAC;SACpD;QAED,OAAO,CAAC,CAAC;IACV,CAAC,EAAE,EAAsB,CAAC,CAAC;IAE1B,OAA4B,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;QAEhD,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAC9B,OAAO,CAAC,CAAC;IACV,CAAC,CAAC,CAAC;IAEH,OAAO,OAAO,CAAC;AAChB,CAAC;AA1BD,oCA0BC;AAED,SAAgB,cAAc,CAAC,OAAO;IAErC,OAAQ,OAA4B;SAClC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAsB;QAErD,IAAI,CAAC,KAAK,IAAI,IAAI,OAAO,CAAC,IAAI,QAAQ,EACtC;YACC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAW,CAAC;SACnB;aAED;YACC,CAAC,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;SACzB;QAED,IAAI,IAAI,EACR;YACC,CAAC,CAAC,CAAC,CAAC,CAAC,kBAAW,CAAC,GAAG,IAAI,CAAC;SACzB;QAED,OAAO,CAAC,CAAC;IACV,CAAC,EAAE,EAAW,CAAC,CACd;AACH,CAAC;AAtBD,wCAsBC;AAED,SAAgB,IAAI,CAAC,CAAQ,EAAE,KAA8C,cAAc;IAE1F,IAAI,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAE1B,IAAI,EAAE,GAAG,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC7B,IAAI,EAAE,GAAG,cAAc,CAAC,EAAE,CAAC,CAAC;IAE5B,OAAO,EAAE,CAAA;AACV,CAAC;AARD,oBAQC;AAED,kBAAe,IAAI,CAAA","sourcesContent":["/**\n * Created by user on 2020/6/9.\n */\n\nimport naturalCompare from '@bluelovers/string-natural-compare/core';\nimport { ITree } from '@lazy-glob/util/lib/types';\nimport { ISortEntriesSort, ISortEntriesSortRow } from '@lazy-glob/util/lib/types/entries';\nimport { SymGlobTree } from '@lazy-glob/util';\n\nexport function entries_sort(entries, fn: (a: string, b: string, cache) => number = naturalCompare, cache: any = {}): ISortEntriesSort\n{\n\tentries = entries.reduce(function (a: ISortEntriesSort, b: ISortEntriesSortRow)\n\t{\n\t\tlet v = b[1];\n\n\t\tif (v === null || typeof v == 'string')\n\t\t{\n\t\t\ta.push(b);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet d = Object.entries(v);\n\t\t\ta.push([b[0], entries_sort(d, fn), v[SymGlobTree]]);\n\t\t}\n\n\t\treturn a;\n\t}, [] as ISortEntriesSort);\n\n\t(entries as ISortEntriesSort).sort(function (a, b)\n\t{\n\t\tlet r = fn(a[0], b[0], cache);\n\t\treturn r;\n\t});\n\n\treturn entries;\n}\n\nexport function entries_reduce(entries)\n{\n\treturn (entries as ISortEntriesSort)\n\t\t.reduce(function (a, [k, v, bool]: ISortEntriesSortRow)\n\t\t{\n\t\t\tif (v === null || typeof v == 'string')\n\t\t\t{\n\t\t\t\ta[k] = v as string;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ta[k] = entries_reduce(v);\n\t\t\t}\n\n\t\t\tif (bool)\n\t\t\t{\n\t\t\t\ta[k][SymGlobTree] = bool;\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}, {} as ITree)\n\t\t;\n}\n\nexport function sort(a: ITree, fn: (a: string, b: string, cache) => number = naturalCompare)\n{\n\tlet r = Object.entries(a);\n\n\tlet a1 = entries_sort(r, fn);\n\tlet a2 = entries_reduce(a1);\n\n\treturn a2\n}\n\nexport default sort\n"]}