{"version":3,"file":"types.js","sourceRoot":"","sources":["types.ts"],"names":[],"mappings":";;AAGA,oCAAuC","sourcesContent":["import { GlobbyOptions } from 'globby';\nimport Bluebird from 'bluebird';\nimport { IReturnRow } from 'node-novel-globby';\nimport { SymGlobTree } from '../index';\n\nexport type ITreeEntries = string | ITreeRow | null;\n\nexport type ITreeRow = {\n\t[key: string]: ITreeEntries;\n\t[SymGlobTree]?: any,\n}\n\nexport type ITree = {\n\t[key: string]: string | ITreeRow | null;\n\t[SymGlobTree]?: any,\n}\n\nexport type IOptionsNovelGlobby = GlobbyOptions & {\n\tcwd?: string,\n\tabsolute?: boolean,\n\n\tuseDefaultPatternsExclude?: boolean,\n\n\tdisableAutoHandle?: boolean,\n\tdisableSort?: boolean,\n\n\tlibPromise?: Bluebird<unknown>,\n\n\tonListRow?<T>(a: T, row: IReturnRow, options: IOptionsNovelGlobby): IReturnRow,\n\n\tthrowEmpty?: boolean,\n\n\tsortCallback?(a, b): number,\n\n\tsortFn?<T>(arr: T): T,\n\n\tpadNum?: number,\n\n\tcheckRoman?: boolean,\n}\n\n"]}