{"version":3,"file":"glob.js","sourceRoot":"","sources":["glob.ts"],"names":[],"mappings":";AAAA;;GAEG","sourcesContent":["/**\n * Created by user on 2020/6/9.\n */\n\nimport { IOptionsNovelGlobby as IOptions } from '@lazy-glob/util/lib/types';\n\nexport type { IOptionsNovelGlobby as IOptions } from '@lazy-glob/util/lib/types';\n\nexport interface IReturnOptionsArray\n{\n\t0: string[];\n\t1: IOptions;\n}\n\nexport interface IReturnOptionsObject\n{\n\tpatterns: string[];\n\toptions: IOptions;\n}\n\nexport interface IReturnOptions extends IReturnOptionsArray, IReturnOptionsObject\n{\n\t[Symbol.iterator]()\n}\n\nexport interface IForeachArrayDeepCache<D = any, U = any>\n{\n\tdeep: number,\n\tdata: D,\n\ttemp: U,\n\ttopCache?: IForeachArrayDeepCache<D, U>,\n}\n\nexport interface IForeachArrayDeepReturn<T, R extends unknown = unknown, D = unknown, U = unknown>\n{\n\tret: R[];\n\tdata: D;\n\ttemp: U;\n}\n\nexport type IArrayDeep<T> = (T | T[] | (T | T[])[])[]\n\nexport interface IArrayDeepInterface<T extends unknown> extends Array<T | T[] | IArrayDeepInterface<T>>\n{\n\n}\n"]}