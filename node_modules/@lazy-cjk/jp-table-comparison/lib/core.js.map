{"version":3,"file":"core.js","sourceRoot":"","sources":["core.ts"],"names":[],"mappings":"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","sourcesContent":["import { IPLUS_TABLE, ITeachKanjiComparison, IKanjiComparisonTable } from './types';\nimport { array_unique, array_unique_overwrite } from 'array-hyper-unique/core';\nimport { trimWithZeroWidth } from 'zero-width';\n\nexport function fixPlusTable<T extends string[][]>(table: T): T\n{\n\treturn table\n\t\t.map(row => {\n\t\t\treturn row\n\t\t\t\t.map(s => {\n\t\t\t\t\tif (typeof s === 'string')\n\t\t\t\t\t{\n\t\t\t\t\t\treturn trimWithZeroWidth(s)\n\t\t\t\t\t}\n\t\t\t\t\treturn s\n\t\t\t\t})\n\t\t}) as T\n\t;\n}\n\nexport function _jpTableCmparisonBuildPre(table: {\n\tTABLE?: IKanjiComparisonTable,\n\tPLUS_TABLE: IPLUS_TABLE,\n\tPLUS_TABLE_SAFE: IPLUS_TABLE,\n\tteachKanjiComparison: ITeachKanjiComparison,\n}, options?: {\n\tskip?: string[],\n\tskip_00?: string[],\n})\n{\n\tconst skip = options?.skip ?? [];\n\tconst skip_00 = options?.skip_00 ?? [];\n\n\tlet { TABLE = [] as IKanjiComparisonTable, PLUS_TABLE, PLUS_TABLE_SAFE } = table;\n\n\tPLUS_TABLE = fixPlusTable(PLUS_TABLE);\n\tPLUS_TABLE_SAFE = fixPlusTable(PLUS_TABLE_SAFE);\n\n\tPLUS_TABLE.forEach(function ([jp, zht, zhs])\n\t{\n\t\taddNew(TABLE, jp, zht, zhs);\n\t});\n\n\tTABLE = array_unique(TABLE.concat(table.teachKanjiComparison.filter(function (row)\n\t{\n\t\tif (skip_00.includes(row[0][0]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t})));\n\n\tTABLE = TABLE.filter(function (v)\n\t{\n\t\tlet [jp, zht, zhs] = v;\n\n\t\tif ((jp[0] == zht[0] && jp[0] == zhs[0]) || (skip.includes(jp[0]) || skip.includes(zht[0]) || skip.includes(zhs[0])))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t});\n\n\tconst TABLE_SAFE: IKanjiComparisonTable = [];\n\n\tPLUS_TABLE_SAFE.forEach(function ([jp, zht, zhs])\n\t{\n\t\taddNew(TABLE, jp, zht, zhs);\n\t\taddNew(TABLE_SAFE, jp, zht, zhs);\n\t});\n\n\treturn {\n\t\tTABLE,\n\t\tTABLE_SAFE,\n\t\tPLUS_TABLE,\n\t\tPLUS_TABLE_SAFE,\n\t}\n}\n\nexport function _jpTableCmparisonBuild(table: {\n\tTABLE?: IKanjiComparisonTable,\n\tPLUS_TABLE: IPLUS_TABLE,\n\tPLUS_TABLE_SAFE: IPLUS_TABLE,\n\tteachKanjiComparison: ITeachKanjiComparison,\n}, options?: {\n\tskip?: string[],\n\tskip_00?: string[],\n})\n{\n\tlet {\n\t\tTABLE,\n\t\tTABLE_SAFE,\n\t\tPLUS_TABLE,\n\t\tPLUS_TABLE_SAFE,\n\t} = _jpTableCmparisonBuildPre(table, options)\n\n\tlet cache = [];\n\n\tfor (let i in TABLE)\n\t{\n\t\tif (cache.includes(i))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [jp, zht, zhs] = TABLE[i];\n\n\t\tlet _do = true;\n\t\tlet j;\n\n\t\tfor (j in TABLE)\n\t\t{\n\t\t\tif (j == i)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet [jp2, zht2, zhs2] = TABLE[j];\n\n\t\t\tif (zht.includes(zht2[0]))\n\t\t\t{\n\t\t\t\t_do = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (zhs.includes(zhs2[0]))\n\t\t\t{\n\t\t\t\t_do = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!_do)\n\t\t{\n\t\t\tcache.push(i);\n\t\t\tcache.push(j);\n\n\t\t\t//console.log(jp, zht, zhs);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tTABLE_SAFE.push(TABLE[i]);\n\t\t}\n\t}\n\n\tarray_unique_overwrite(TABLE);\n\tarray_unique_overwrite(TABLE_SAFE);\n\tarray_unique_overwrite(PLUS_TABLE);\n\tarray_unique_overwrite(PLUS_TABLE_SAFE);\n\n\treturn {\n\t\tTABLE,\n\t\tTABLE_SAFE,\n\t\tPLUS_TABLE,\n\t\tPLUS_TABLE_SAFE,\n\t}\n}\n\nexport function addNew(table: IKanjiComparisonTable, jp, zht, zhs): IKanjiComparisonTable\n{\n\tjp = Array.isArray(jp) ? jp : [jp];\n\tzht = Array.isArray(zht) ? zht : [zht];\n\tzhs = Array.isArray(zhs) ? zhs : [zhs];\n\n\ttable.push([\n\t\tjp,\n\t\tzht,\n\t\tzhs,\n\t]);\n\n\treturn table;\n}\n"]}