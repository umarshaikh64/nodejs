{"version":3,"file":"map.js","sourceRoot":"","sources":["map.ts"],"names":[],"mappings":";;;;;;AAAA,4DAAiC;AAEjC,oCAAuC;AAEvC,SAAgB,OAAO,CAAC,CAAS,EAAE,KAAa;IAE/C,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACjB,OAAO,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AACvC,CAAC;AAJD,0BAIC;AAED,SAAgB,QAAQ,CAAC,IAAY,EAAE,KAAa;IAEnD,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;IAEtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAC5B;QACC,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;KACpC;IAED,qCAAqC;IACrC,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;AACvB,CAAC;AAZD,4BAYC;AAED,SAAgB,QAAQ,CAAC,IAAY,EAAE,KAAa;IAEnD,IAAI,MAAM,GAAG,oBAAO,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IACrC,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;IAExB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAC5B;QACC,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;KACtC;IAED,qCAAqC;IACrC,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACxB,CAAC;AAZD,4BAYC;AAED,SAAgB,QAAQ,CAAC,IAAY,EAAE,KAAa;IAEnD,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACjC,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;IAExB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAC5B;QACC,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;KACtC;IAED,qCAAqC;IACrC,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACxB,CAAC;AAZD,4BAYC;AAED,SAAgB,QAAQ,CAAC,IAAY,EAAE,KAAa;IAEnD,OAAO,IAAI,CAAC,OAAO,CAAC,mBAAW,EAAE,UAAU,CAAC;QAE3C,OAAO,OAAO,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;AACJ,CAAC;AAND,4BAMC","sourcesContent":["import UString from 'uni-string';\nimport { ITable } from '../types';\nimport { REGEXP_TEST } from '../const';\n\nexport function charMap(s: string, table: ITable): string\n{\n\tlet t = table[s];\n\treturn (typeof t === 'string') ? t : s\n}\n\nexport function textMap1(text: string, table: ITable): string\n{\n\tlet toText = [];\n\tlet len = text.length;\n\n\tfor (let i = 0; i < len; i++)\n\t{\n\t\ttoText[i] = charMap(text[i], table);\n\t}\n\n\t//console.log(toText.length, toText);\n\treturn toText.join('')\n}\n\nexport function textMap2(text: string, table: ITable): string\n{\n\tlet toText = UString.split(text, '');\n\tlet len = toText.length;\n\n\tfor (let i = 0; i < len; i++)\n\t{\n\t\ttoText[i] = charMap(toText[i], table);\n\t}\n\n\t//console.log(toText.length, toText);\n\treturn toText.join('');\n}\n\nexport function textMap3(text: string, table: ITable): string\n{\n\tlet toText = text.split(/(?:)/u);\n\tlet len = toText.length;\n\n\tfor (let i = 0; i < len; i++)\n\t{\n\t\ttoText[i] = charMap(toText[i], table);\n\t}\n\n\t//console.log(toText.length, toText);\n\treturn toText.join('');\n}\n\nexport function textMap4(text: string, table: ITable): string\n{\n\treturn text.replace(REGEXP_TEST, function (s)\n\t{\n\t\treturn charMap(s, table);\n\t});\n}\n\n"]}