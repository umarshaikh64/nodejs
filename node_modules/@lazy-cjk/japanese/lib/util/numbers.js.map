{"version":3,"file":"numbers.js","sourceRoot":"","sources":["numbers.ts"],"names":[],"mappings":";AAAA;;GAEG;;;;;;AAEH,0BAA0B;AAC1B,oDAAyB;AAEzB,SAAgB,MAAM,CAAC,MAAc,EAAE,QAAgB;IAEtD,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;IACzC,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAElC,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC;AAND,wBAMC;AAED,iCAAiC;AACjC,SAAgB,OAAO,CAAC,MAAc,EAAE,IAAY,EAAE,MAAc;IAEnE,IAAI,GAAG,GAAG,IAAI,gBAAG,CAAC,CAAC,CAAC,CAAC;IAErB,KAAK,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,GAAG,MAAM,EAAE,GAAG,EAAE,EAC/C;QACC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnB,IAAI,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,EACvB;YACC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAClB;KACD;IAED,OAAO,GAAG,CAAC;AACZ,CAAC;AAdD,0BAcC","sourcesContent":["/**\n * Created by user on 2020/5/31.\n */\n\n// Get nth bit from buffer\nimport Big from 'big.js';\n\nexport function getBit(buffer: Buffer, position: number)\n{\n\tlet byteIndex = Math.floor(position / 8);\n\tlet byte = buffer[byteIndex] || 0;\n\n\treturn !!(byte & (1 << (7 - position % 8)));\n}\n\n// Get bits of buffer from a to b\nexport function getBits(buffer: Buffer, from: number, length: number)\n{\n\tlet ret = new Big(0);\n\n\tfor (let ptr = from; ptr < from + length; ptr++)\n\t{\n\t\tret = ret.times(2);\n\t\tif (getBit(buffer, ptr))\n\t\t{\n\t\t\tret = ret.plus(1);\n\t\t}\n\t}\n\n\treturn ret;\n}\n"]}